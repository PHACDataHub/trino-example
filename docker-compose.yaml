version: '1.0'

# Based on https://github.com/njanakiev/trino-minio-docker $
#   https://github.com/bitsondatadev/hive-metastore

services:
  trino:
    container_name: trino
    image: 'trinodb/trino:439'
    ports:
      - '8080:8080'
    volumes:
      - $PWD/trino/etc/catalog:/etc/trino/catalog 
      - ./sa-gcs-key.json:/sa-gcs-key.json
    networks:
      - trino-network

  mariadb:
    container_name: mariadb
    image: mariadb:10.5.8
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    #   interval: 10s
    #   retries: 5
    #   timeout: 5s
    #   start_period: 10s
    networks:
      - trino-network

  hive-metastore:
    container_name: hive-metastore
    # image: 'bitsondatadev/hive-metastore:latest'
    build: './hive-metastore'
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./hive-metastore/conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
      - ./hive-metastore/conf/core-site.xml:/opt/hadoop-3.2.0/etc/hadoop/core-site.xml
      # - ./sa-gcs-key.json:/opt/hadoop-3.2.0/sa-gcs-key.json
      - ./sa-gcs-key.json:/sa-gcs-key.json  
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      # mariadb:
      #   condition: service_healthy
      - mariadb
    networks:
      - trino-network

  superset:
    container_name: superset
    # image: 'apache/superset:3.1.1'
    build: ./superset
    ports:
      - '8088:8088'
    environment:
      - TALISMAN_ENABLED=False
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=admin
    networks:
      - trino-network

  # minio:
  #   hostname: minio
  #   image: 'minio/minio:RELEASE.2021-01-08T21-18-21Z'
  #   container_name: minio
  #   ports:
  #     - '9000:9000'
  #   volumes:
  #     - minio-data:/data
  #   environment:
  #     MINIO_ACCESS_KEY: minio_access_key
  #     MINIO_SECRET_KEY: minio_secret_key
  #   command: server /data
  #   networks:
  #     - trino-network

# volumes:
#   minio-data:
#     driver: local

networks:
  trino-network:
    driver: bridge
